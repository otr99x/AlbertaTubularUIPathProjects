<Activity mc:Ignorable="sap sap2010" x:Class="Main" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="InvoiceFile" Type="InArgument(x:String)" />
    <x:Property Name="InvoiceNumber" Type="OutArgument(x:String)" />
    <x:Property Name="InvoiceDate" Type="OutArgument(x:String)" />
    <x:Property Name="InvoiceTotal" Type="OutArgument(x:String)" />
    <x:Property Name="GstTotal" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>759,2625</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="24">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="20">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Sequence - RhinoInvoice" sap:VirtualizedContainerService.HintSize="719,2545" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="invoiceFields" />
      <Variable x:TypeArguments="x:String" Name="invoiceFileText" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <If Condition="[InvoiceFile = &quot;&quot;]" sap:VirtualizedContainerService.HintSize="697,208" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <Throw Exception="[new Exception(&quot;BlankInvoiceFile exception!&quot;+VbCrLf+VbCrLf+&quot;Calling workflow either passed a blank invoice filename or this sequence was executed independently.&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
      </If.Then>
    </If>
    <ui:ReadPDFText DisplayName="Read PDF Text" FileName="[InvoiceFile]" sap:VirtualizedContainerService.HintSize="697,59" sap2010:WorkflowViewState.IdRef="ReadPDFText_1" Range="All" Text="[invoiceFileText]" />
    <ui:Matches BuilderPattern="(Invoice\sNo\.:)\s+(\d+).*[\r\n][\s\S]+(Date:)\s+(\d+\/\d+\/\d+)[\r\n][\s\S]+(GST)\s+(\d{0,3}\,?\d{1,3}\.\d{2})[\r\n][\s\S]+(Total Amount)\s+(\d{0,3}\,?\d{1,3}\.\d{2})" sap:VirtualizedContainerService.HintSize="697,59" sap2010:WorkflowViewState.IdRef="Matches_2" Input="[invoiceFileText]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;(Invoice\\sNo\\.:)\\s+(\\d+).*[\\r\\n][\\s\\S]+&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null},{&quot;Index&quot;:1,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;(Date:)\\s+(\\d+\\\/\\d+\\\/\\d+)[\\r\\n][\\s\\S]+&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null},{&quot;Index&quot;:2,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;(GST)\\s+(\\d{0,3}\\,?\\d{1,3}\\.\\d{2})[\\r\\n][\\s\\S]+&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null},{&quot;Index&quot;:3,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;(Total Amount)\\s+(\\d{0,3}\\,?\\d{1,3}\\.\\d{2})&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="(Invoice\sNo\.:)\s+(\d+).*[\r\n][\s\S]+(Date:)\s+(\d+\/\d+\/\d+)[\r\n][\s\S]+(GST)\s+(\d{0,3}\,?\d{1,3}\.\d{2})[\r\n][\s\S]+(Total Amount)\s+(\d{0,3}\,?\d{1,3}\.\d{2})" RegexOption="IgnoreCase" Result="[invoiceFields]" />
    <If Condition="[invoiceFields.Count = 0]" sap:VirtualizedContainerService.HintSize="697,633" sap2010:WorkflowViewState.IdRef="If_3">
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="336,485" sap2010:WorkflowViewState.IdRef="Sequence_5">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Reading of PDF Failed! Trying OCR...&quot;]" />
          <ui:ReadPDFWithOCR DegreeOfParallelism="-1" DisplayName="Read PDF With OCR" FileName="[InvoiceFile]" sap:VirtualizedContainerService.HintSize="314,131" sap2010:WorkflowViewState.IdRef="ReadPDFWithOCR_1" ImageDpi="300" Range="All" Text="[invoiceFileText]">
            <ui:ReadPDFWithOCR.OCREngine>
              <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                <ActivityFunc.Argument>
                  <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                </ActivityFunc.Argument>
                <ui:GoogleOCR FilterRegion="{x:Null}" Output="{x:Null}" Text="{x:Null}" AllowedCharacters="" ComputeSkewAngle="False" DeniedCharacters="" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_1" Image="[Image]" Invert="False" Language="eng" Profile="Legacy" Scale="1" />
              </ActivityFunc>
            </ui:ReadPDFWithOCR.OCREngine>
          </ui:ReadPDFWithOCR>
          <ui:Matches BuilderPattern="(Invoice\sNo\.:)\s+(\d+).*[\r\n][\s\S]+(Date:)\s+(\d+\/\d+\/\d+)[\r\n][\s\S]+(GST)\s+(\d{0,3}\,?\d{1,3}\.\d{2})[\r\n][\s\S]+(Total Amount)\s+(\d{0,3}\,?\d{1,3}\.\d{2})" sap:VirtualizedContainerService.HintSize="314,59" sap2010:WorkflowViewState.IdRef="Matches_1" Input="[invoiceFileText]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;(Invoice\\sNo\\.:)\\s+(\\d+).*[\\r\\n][\\s\\S]+&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null},{&quot;Index&quot;:1,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;(Date:)\\s+(\\d+\\\/\\d+\\\/\\d+)[\\r\\n][\\s\\S]+&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null},{&quot;Index&quot;:2,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;(GST)\\s+(\\d{0,3}\\,?\\d{1,3}\\.\\d{2})[\\r\\n][\\s\\S]+&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null},{&quot;Index&quot;:3,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;(Total Amount)\\s+(\\d{0,3}\\,?\\d{1,3}\\.\\d{2})&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="(Invoice\sNo\.:)\s+(\d+).*[\r\n][\s\S]+(Date:)\s+(\d+\/\d+\/\d+)[\r\n][\s\S]+(GST)\s+(\d{0,3}\,?\d{1,3}\.\d{2})[\r\n][\s\S]+(Total Amount)\s+(\d{0,3}\,?\d{1,3}\.\d{2})" RegexOption="IgnoreCase" Result="[invoiceFields]" />
        </Sequence>
      </If.Then>
    </If>
    <If Condition="[invoiceFields.Count = 0]" sap:VirtualizedContainerService.HintSize="697,1302" sap2010:WorkflowViewState.IdRef="If_2">
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="336,314" sap2010:WorkflowViewState.IdRef="Sequence_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314,91" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;OCR Reading of PDF Failed!&quot;]" />
          <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" Buttons="Ok" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="314,59" sap2010:WorkflowViewState.IdRef="MessageBox_2" Text="[&quot;OCR Reading of PDF Failed!&quot; + VbCrLf + VbCrLf + &#xD;&#xA;InvoiceFile + VbCrLf+ VbCrLf + &#xD;&#xA;invoiceFileText]" TopMost="True" />
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="336,1154" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314,91" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Successfully read PDF invoice.&quot;]" />
          <Assign sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[InvoiceNumber]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[invoiceFields(0).groups(2).value]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_2">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[InvoiceDate]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[invoiceFields(0).groups(4).value]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_3">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[GstTotal]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[invoiceFields(0).groups(6).value]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_4">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[InvoiceTotal]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[invoiceFields(0).groups(8).value]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:InvokeCode ContinueOnError="{x:Null}" Code="IO_InvoiceNumber = IO_InvoiceNumber.Trim&#xA;'&#xA;IO_InvoiceDate = IO_InvoiceDate.Trim&#xA;IO_InvoiceDate = IO_InvoiceDate.Replace(&quot; &quot;,&quot;&quot;)&#xA;'&#xA;IO_gstTotal = IO_gstTotal.Replace(&quot;$&quot;,&quot;&quot;)&#xA;IO_gstTotal = IO_gstTotal.Replace(&quot;,&quot;,&quot;&quot;)&#xA;IO_gstTotal = IO_gstTotal.Trim&#xA;IO_gstTotal = IO_gstTotal.Replace(&quot; &quot;,&quot;&quot;)&#xA;'&#xA;IO_invoiceTotal = IO_invoiceTotal.Replace(&quot;$&quot;,&quot;&quot;)&#xA;IO_invoiceTotal = IO_invoiceTotal.Replace(&quot;,&quot;,&quot;&quot;)&#xA;IO_invoiceTotal = IO_invoiceTotal.Trim&#xA;IO_invoiceTotal = IO_invoiceTotal.Replace(&quot; &quot;,&quot;&quot;)&#xA;" DisplayName="Invoke Code - Trim Strings" sap:VirtualizedContainerService.HintSize="314,164" sap2010:WorkflowViewState.IdRef="InvokeCode_2">
            <ui:InvokeCode.Arguments>
              <InOutArgument x:TypeArguments="x:String" x:Key="IO_InvoiceNumber">[InvoiceNumber]</InOutArgument>
              <InOutArgument x:TypeArguments="x:String" x:Key="IO_InvoiceDate">[InvoiceDate]</InOutArgument>
              <InOutArgument x:TypeArguments="x:String" x:Key="IO_gstTotal">[GstTotal]</InOutArgument>
              <InOutArgument x:TypeArguments="x:String" x:Key="IO_invoiceTotal">[InvoiceTotal]</InOutArgument>
            </ui:InvokeCode.Arguments>
          </ui:InvokeCode>
          <ui:InvokeCode ContinueOnError="{x:Null}" Code="' Rhino date formatted as MM/dd/yyyy&#xA;' OpenInvoice expects dates in yyyy-MM-dd&#xA;IO_InvoiceDate = DateTime.ParseExact(IO_InvoiceDate, &quot;MM/dd/yyyy&quot;, CultureInfo.InvariantCulture).ToString(&quot;yyyy-MM-dd&quot;)" DisplayName="Invoke Code - Format Date" sap:VirtualizedContainerService.HintSize="314,164" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
            <ui:InvokeCode.Arguments>
              <InOutArgument x:TypeArguments="x:String" x:Key="IO_InvoiceDate">[invoiceDate]</InOutArgument>
            </ui:InvokeCode.Arguments>
          </ui:InvokeCode>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Invoice Number: &quot; +&quot;&lt;&quot;+ InvoiceNumber +&quot;&gt;&quot;+VbCrLf+&#xA;&quot;Invoice Date: &quot; +&quot;&lt;&quot;+ InvoiceDate +&quot;&gt;&quot;+VbCrLf+&#xA;&quot;GST Total: &quot; +&quot;&lt;&quot;+ GstTotal +&quot;&gt;&quot;+VbCrLf+&#xA;&quot;Invoice Total: &quot; +&quot;&lt;&quot;+ InvoiceTotal +&quot;&gt;&quot;]" />
        </Sequence>
      </If.Else>
    </If>
  </Sequence>
</Activity>